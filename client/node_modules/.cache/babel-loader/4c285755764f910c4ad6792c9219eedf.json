{"ast":null,"code":"var _jsxFileName = \"/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/components/Brainflix/Brainflix.js\";\nimport './Brainflix.scss';\nimport React from 'react';\nimport Header from '../Header/Header';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport VideoSection from '../VideoSection/VideoSection';\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport VideoList from '../VideoList/VideoList';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Brainflix extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: mainVideoData,\n      videoList: videoListData,\n      indexNumber: 0,\n      currentId: ''\n    };\n\n    this.dateConverter = unixTime => {\n      let t = new Date(unixTime);\n      let y = t.getFullYear();\n      let m = t.getMonth();\n      let d = t.getDate();\n\n      if (d < 10) {\n        d = '0' + d;\n      }\n\n      if (m < 10) {\n        m = '0' + m;\n      }\n\n      return m + '/' + d + '/' + y;\n    };\n\n    this.videoSwitcher = id => {\n      if (!id) {\n        this.setState({\n          indexNumber: 0\n        });\n      } else {\n        let getNum = this.state.video.findIndex(elem => elem.id === id);\n\n        if (getNum > -1) {\n          this.setState({\n            indexNumber: getNum\n          });\n        } else {\n          this.setState({\n            indexNumber: 0\n          });\n        }\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          method: this.videoSwitcher\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          data: this.state.video[this.state.indexNumber]\n        }, this.state.video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"component\",\n          children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n            converter: this.dateConverter,\n            mvList: this.state.video[this.state.indexNumber]\n          }, this.state.video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n            vList: this.state.videoList,\n            elemNum: this.state.indexNumber,\n            switcher: this.videoSwitcher\n          }, this.state.videoList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:id\",\n            render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n              vList: this.state.videoList,\n              ...routerProps\n            }, this.state.videoList.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.props.match.params.id === this.props.match.params.id) {\n      this.setState({\n        currentId: this.props.match.params.id\n      });\n    }\n  }\n\n}\n\nexport default Brainflix;","map":{"version":3,"sources":["/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/components/Brainflix/Brainflix.js"],"names":["React","Header","videoListData","mainVideoData","VideoSection","VideoPlayer","VideoList","BrowserRouter","Route","Switch","Brainflix","Component","state","video","videoList","indexNumber","currentId","dateConverter","unixTime","t","Date","y","getFullYear","m","getMonth","d","getDate","videoSwitcher","id","setState","getNum","findIndex","elem","render","routerProps","componentDidUpdate","prevProps","prevState","props","match","params"],"mappings":"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","sourcesContent":["import './Brainflix.scss';\nimport React from 'react';\nimport Header from '../Header/Header'\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport VideoSection from '../VideoSection/VideoSection';\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport VideoList from '../VideoList/VideoList';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\n\n\nclass Brainflix extends React.Component{\n\tstate = {\n\t\tvideo: mainVideoData,\n\t\tvideoList: videoListData,\n\t\tindexNumber: 0,\n\t\tcurrentId: '',\n\n\t}\n\tdateConverter = (unixTime) =>{\n\t\tlet t = new Date(unixTime);\n\t\tlet y = t.getFullYear();\n\t\tlet m = t.getMonth();\n\t\tlet d = t.getDate();\t\t\n\t\tif (d<10){\n\t\t\td = '0' + d;\n\t\t}\n\t\tif (m<10){\n\t\t\tm = '0' + m;\n\t\t}\n\t\treturn m + '/' + d + '/' + y;\n\t}\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif( prevProps.props.match.params.id === this.props.match.params.id){\n\t\t\tthis.setState({currentId: this.props.match.params.id })\n\t\t}\n\n\t}\n\n\tvideoSwitcher = (id) =>{\n\t\tif(!id){\n\t\t\tthis.setState({indexNumber: 0})\n\t\t}\n\t\telse{\n\t\t\tlet getNum = this.state.video.findIndex(elem=>elem.id === id)\n\t\t\tif(getNum > -1){\n\t\t\t\t this.setState({indexNumber: getNum})\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.setState({indexNumber: 0})\n\t\t\t}\n\t\t}\n\t}\n\trender = () =>{\n\t\treturn(\n\t\t\t<>\n\t\t\t<Header method={this.videoSwitcher} />\n\t\t\t<VideoPlayer key={this.state.video.id} data={this.state.video[this.state.indexNumber]}/>\n\t\t\t<div className='component'>\n\t\t\t\t<VideoSection key={this.state.video.id} converter={this.dateConverter} mvList={this.state.video[this.state.indexNumber]} />\n\t\t\t\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\n\t\t\t\t<Route path='/:id' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} {...routerProps} />\n\t\t\t\t\t\n\t\t\t\t} />\n\t\t\t</div>\n\t\t\t</>\n\n\n\n\n\t\t);\n\t}\n}\nexport default Brainflix;\n\n"]},"metadata":{},"sourceType":"module"}