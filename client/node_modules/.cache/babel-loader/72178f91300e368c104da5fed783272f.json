{"ast":null,"code":"var _jsxFileName = \"/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/pages/LandingPage/LandingPage.js\";\nimport './LandingPage.scss';\nimport React from 'react';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch } from 'react-router-dom';\nimport { UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url, ApiKey, VideoArray } from '../../apiKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Brainflix extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: null,\n      videoList: null\n    };\n\n    this.componentDidUpdate = ({\n      match\n    }, prevState) => {\n      if (!prevState.video) {\n        const getId = UrlIdConverter(this.props.match.url, this.state.videoList);\n        axios.get(Url + VideoArray + getId + '/' + ApiKey).then(response2 => {\n          this.setState({\n            video: response2.data\n          });\n        });\n      }\n\n      if (match.url !== this.props.match.url) {\n        const getId = UrlIdConverter(this.props.match.url, this.state.videoList);\n\n        if (this.props.match.url !== '/') {\n          axios.get(Url + VideoArray + getId + '/' + ApiKey).then(response2 => {\n            this.setState({\n              video: response2.data\n            });\n          });\n        } else {\n          axios.get(Url + VideoArray + this.state.videoList[0].id + '/' + ApiKey).then(response2 => {\n            this.setState({\n              video: response2.data\n            });\n          });\n        }\n\n        window.scrollTo(0, 0);\n      }\n\n      setTimeout(() => {\n        console.log(prevState.video);\n      }, 400);\n    };\n\n    this._handleOnsubmit = event => {\n      const getId = UrlIdConverter(this.props.match.url, this.state.videoList);\n      event.preventDefault();\n      const form = event.target;\n      let eventObj = {\n        name: 'Mohan Muruge',\n        comment: form.postComment.value\n      };\n      axios.post(Url + VideoArray + this.state.video.id + '/comments/' + ApiKey, eventObj).then(response => {\n        console.log(response);\n      });\n      axios.get(Url + VideoArray + getId + '/' + ApiKey).then(response => {\n        this.setState({\n          video: response.data\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      axios.get(Url + VideoArray + ApiKey).then(response => {\n        if (this.props.match.url !== '/') {\n          const getId = UrlIdConverter(this.props.match.url, response.data);\n          axios.get(Url + VideoArray + getId + '/' + ApiKey).then(response2 => {\n            this.setState({\n              videoList: response.data,\n              video: response2.data\n            });\n          });\n        } else {\n          axios.get(Url + VideoArray + response.data[0].id + '/' + ApiKey).then(response2 => {\n            this.setState({\n              videoList: response.data,\n              video: response2.data\n            });\n          });\n        }\n\n        window.scrollTo(0, 0);\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.videoList && this.state.video && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: Header\n          }, 'uniqueKey', false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            data: this.state.video\n          }, this.state.curentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"component\",\n            children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n              data: this.state.video,\n              handler: this._handleOnsubmit\n            }, this.state.curentId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/:id\",\n                render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                  data: this.state.videoList,\n                  ...routerProps\n                }, this.state.currentId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 7\n                }, this)\n              }, 'uniqueKey1', false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                  data: this.state.videoList,\n                  ...routerProps\n                }, this.state.currentId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 7\n                }, this)\n              }, 'uniqueKey2', false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true)\n      }, void 0, false);\n    };\n  }\n\n}\n\nexport default Brainflix;","map":{"version":3,"sources":["/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/pages/LandingPage/LandingPage.js"],"names":["React","Header","VideoSection","VideoPlayer","VideoList","Route","Switch","UrlIdConverter","axios","Url","ApiKey","VideoArray","Brainflix","Component","state","video","videoList","componentDidUpdate","match","prevState","getId","props","url","get","then","response2","setState","data","id","window","scrollTo","setTimeout","console","log","_handleOnsubmit","event","preventDefault","form","target","eventObj","name","comment","postComment","value","post","response","componentDidMount","render","curentId","routerProps","currentId"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;AACA,SAAUC,cAAV,QAAgC,wBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAaC,MAAb,EAAoBC,UAApB,QAAqC,cAArC;;;;AAEA,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACPC,MAAAA,KAAK,EAAE,IADA;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KAF8B;;AAAA,SAOtCC,kBAPsC,GAOjB,CAAC;AAACC,MAAAA;AAAD,KAAD,EAAWC,SAAX,KAAyB;AAC5C,UAAG,CAACA,SAAS,CAACJ,KAAd,EAAoB;AACnB,cAAMK,KAAK,GAAGb,cAAc,CAAC,KAAKc,KAAL,CAAWH,KAAX,CAAiBI,GAAlB,EAAsB,KAAKR,KAAL,CAAWE,SAAjC,CAA5B;AACCR,QAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmBS,KAAnB,GAA2B,GAA3B,GAAiCV,MAA3C,EACCc,IADD,CACMC,SAAS,IAAE;AAChB,eAAKC,QAAL,CAAc;AACbX,YAAAA,KAAK,EAAEU,SAAS,CAACE;AADJ,WAAd;AAGA,SALD;AAOD;;AAED,UAAGT,KAAK,CAACI,GAAN,KAAc,KAAKD,KAAL,CAAWH,KAAX,CAAiBI,GAAlC,EAAwC;AACvC,cAAMF,KAAK,GAAGb,cAAc,CAAC,KAAKc,KAAL,CAAWH,KAAX,CAAiBI,GAAlB,EAAsB,KAAKR,KAAL,CAAWE,SAAjC,CAA5B;;AAEA,YAAG,KAAKK,KAAL,CAAWH,KAAX,CAAiBI,GAAjB,KAAyB,GAA5B,EAAgC;AAC/Bd,UAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmBS,KAAnB,GAA2B,GAA3B,GAAiCV,MAA3C,EACCc,IADD,CACMC,SAAS,IAAE;AAChB,iBAAKC,QAAL,CAAc;AACbX,cAAAA,KAAK,EAAEU,SAAS,CAACE;AADJ,aAAd;AAGA,WALD;AAMA,SAPD,MAQI;AACHnB,UAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmB,KAAKG,KAAL,CAAWE,SAAX,CAAqB,CAArB,EAAwBY,EAA3C,GAAgD,GAAhD,GAAsDlB,MAAhE,EACCc,IADD,CACMC,SAAS,IAAE;AAChB,iBAAKC,QAAL,CAAc;AACbX,cAAAA,KAAK,EAAEU,SAAS,CAACE;AADJ,aAAd;AAGA,WALD;AAMA;;AACDE,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA;;AACAC,MAAAA,UAAU,CAAC,MAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYd,SAAS,CAACJ,KAAtB;AAA6B,OAAnC,EAAoC,GAApC,CAAV;AAGF,KA3CqC;;AAAA,SA4CvCmB,eA5CuC,GA4CpBC,KAAD,IAAU;AAC3B,YAAMf,KAAK,GAAGb,cAAc,CAAC,KAAKc,KAAL,CAAWH,KAAX,CAAiBI,GAAlB,EAAsB,KAAKR,KAAL,CAAWE,SAAjC,CAA5B;AACAmB,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAIC,QAAQ,GAAG;AACdC,QAAAA,IAAI,EAAE,cADQ;AAEdC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,WAAL,CAAiBC;AAFZ,OAAf;AAIAnC,MAAAA,KAAK,CAACoC,IAAN,CAAWnC,GAAG,GAAEE,UAAL,GAAkB,KAAKG,KAAL,CAAWC,KAAX,CAAiBa,EAAnC,GAAwC,YAAxC,GAAuDlB,MAAlE,EAAyE6B,QAAzE,EACCf,IADD,CACMqB,QAAQ,IAAG;AAACb,QAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AAAsB,OADxC;AAEArC,MAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAEE,UAAL,GAAkBS,KAAlB,GAA0B,GAA1B,GAAgCV,MAA1C,EACCc,IADD,CACMqB,QAAQ,IAAG;AAChB,aAAKnB,QAAL,CAAc;AAACX,UAAAA,KAAK,EAAE8B,QAAQ,CAAClB;AAAjB,SAAd;AACA,OAHD;AAIA,KA1DsC;;AAAA,SA4DtCmB,iBA5DsC,GA4DlB,MAAK;AAExBtC,MAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmBD,MAA7B,EACCc,IADD,CACMqB,QAAQ,IAAG;AACf,YAAG,KAAKxB,KAAL,CAAWH,KAAX,CAAiBI,GAAjB,KAAyB,GAA5B,EAAgC;AAChC,gBAAMF,KAAK,GAAGb,cAAc,CAAC,KAAKc,KAAL,CAAWH,KAAX,CAAiBI,GAAlB,EAAsBuB,QAAQ,CAAClB,IAA/B,CAA5B;AACAnB,UAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmBS,KAAnB,GAA2B,GAA3B,GAAiCV,MAA3C,EACCc,IADD,CACMC,SAAS,IAAE;AAChB,iBAAKC,QAAL,CAAc;AACbV,cAAAA,SAAS,EAAE6B,QAAQ,CAAClB,IADP;AAEbZ,cAAAA,KAAK,EAAEU,SAAS,CAACE;AAFJ,aAAd;AAIA,WAND;AAOA,SATA,MAUG;AACHnB,UAAAA,KAAK,CAACe,GAAN,CAAUd,GAAG,GAAGE,UAAN,GAAmBkC,QAAQ,CAAClB,IAAT,CAAc,CAAd,EAAiBC,EAApC,GAAyC,GAAzC,GAA+ClB,MAAzD,EACCc,IADD,CACMC,SAAS,IAAE;AAChB,iBAAKC,QAAL,CAAc;AACbV,cAAAA,SAAS,EAAE6B,QAAQ,CAAClB,IADP;AAEbZ,cAAAA,KAAK,EAAEU,SAAS,CAACE;AAFJ,aAAd;AAIA,WAND;AAOA;;AACDE,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,OAvBD;AAwBA,KAtFqC;;AAAA,SAwFtCiB,MAxFsC,GAwF7B,MAAK;AACb,0BACC;AAAA,kBACE,KAAKjC,KAAL,CAAWE,SAAX,IAAwB,KAAKF,KAAL,CAAWC,KAAnC,iBACF;AAAA,kCACC,QAAC,KAAD;AAAuB,YAAA,IAAI,EAAC,GAA5B;AAAgC,YAAA,SAAS,EAAEd;AAA3C,aAAW,WAAX;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,WAAD;AAAwC,YAAA,IAAI,EAAE,KAAKa,KAAL,CAAWC;AAAzD,aAAkB,KAAKD,KAAL,CAAWkC,QAA7B;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACC,QAAC,YAAD;AAAyC,cAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWC,KAA1D;AAAiE,cAAA,OAAO,EAAE,KAAKmB;AAA/E,eAAmB,KAAKpB,KAAL,CAAWkC,QAA9B;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,MAAD;AAAA,sCACA,QAAC,KAAD;AAAwB,gBAAA,IAAI,EAAC,MAA7B;AAAoC,gBAAA,MAAM,EAAIC,WAAD,iBAC5C,QAAC,SAAD;AAAsC,kBAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWE,SAAvD;AAAA,qBAAsEiC;AAAtE,mBAAgB,KAAKnC,KAAL,CAAWoC,SAA3B;AAAA;AAAA;AAAA;AAAA;AADD,iBAAW,YAAX;AAAA;AAAA;AAAA;AAAA,sBADA,eAIA,QAAC,KAAD;AAAwB,gBAAA,IAAI,EAAC,GAA7B;AAAiC,gBAAA,MAAM,EAAID,WAAD,iBACzC,QAAC,SAAD;AAAsC,kBAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWE,SAAvD;AAAA,qBAAsEiC;AAAtE,mBAAgB,KAAKnC,KAAL,CAAWoC,SAA3B;AAAA;AAAA;AAAA;AAAA;AADD,iBAAW,YAAX;AAAA;AAAA;AAAA;AAAA,sBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAFA,uBADD;AAqBA,KA9GqC;AAAA;;AAAA;;AAgHvC,eAAetC,SAAf","sourcesContent":["import './LandingPage.scss';\nimport React from 'react';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch} from 'react-router-dom'\nimport {  UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url,ApiKey,VideoArray} from '../../apiKey';\n\nclass Brainflix extends React.Component{\n\n\tstate = {\n\t\tvideo: null,\n\t\tvideoList: null,\n\n\t}\n\tcomponentDidUpdate = ({match} , prevState) => {\n\t\t\tif(!prevState.video){\n\t\t\t\tconst getId = UrlIdConverter(this.props.match.url,this.state.videoList)\n\t\t\t\t\taxios.get(Url + VideoArray + getId + '/' + ApiKey)\n\t\t\t\t\t.then(response2=>{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tvideo: response2.data\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tif(match.url !== this.props.match.url ) {\n\t\t\t\tconst getId = UrlIdConverter(this.props.match.url,this.state.videoList)\n\n\t\t\t\tif(this.props.match.url !== '/'){\n\t\t\t\t\taxios.get(Url + VideoArray + getId + '/' + ApiKey)\n\t\t\t\t\t.then(response2=>{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tvideo: response2.data\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\taxios.get(Url + VideoArray + this.state.videoList[0].id + '/' + ApiKey)\n\t\t\t\t\t.then(response2=>{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tvideo: response2.data\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\twindow.scrollTo(0, 0)\n\t\t\t}\n\t\t\t\tsetTimeout(()=>{console.log(prevState.video)},400)\n\n\t\t\t\n\t}\n_handleOnsubmit = (event) =>{\n\tconst getId = UrlIdConverter(this.props.match.url,this.state.videoList)\n\tevent.preventDefault();\n\tconst form = event.target;\n\tlet eventObj = {\n\t\tname: 'Mohan Muruge',\n\t\tcomment: form.postComment.value\n\t}\n\taxios.post(Url+ VideoArray + this.state.video.id + '/comments/' + ApiKey,eventObj)\n\t.then(response =>{console.log(response)})\n\taxios.get(Url+ VideoArray + getId + '/' + ApiKey)\n\t.then(response =>{\n\t\tthis.setState({video: response.data})\n\t})\n}\n\n\tcomponentDidMount = () =>{\n\n\t\taxios.get(Url + VideoArray + ApiKey)\n\t\t.then(response =>{\n\t\t\t\tif(this.props.match.url !== '/'){\n\t\t\t\tconst getId = UrlIdConverter(this.props.match.url,response.data)\n\t\t\t\taxios.get(Url + VideoArray + getId + '/' + ApiKey)\n\t\t\t\t.then(response2=>{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvideoList: response.data,\n\t\t\t\t\t\tvideo: response2.data\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{\n\t\t\t\taxios.get(Url + VideoArray + response.data[0].id + '/' + ApiKey)\n\t\t\t\t.then(response2=>{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvideoList: response.data,\n\t\t\t\t\t\tvideo: response2.data\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\twindow.scrollTo(0, 0)\n\n\t\t})\n\t}\n\n\trender = () =>{\n\t\treturn(\n\t\t\t<>\n\t\t\t{ this.state.videoList && this.state.video   && (\n\t\t\t<>\n\t\t\t\t<Route key='uniqueKey' path='/' component={Header}  />\n\t\t\t\t<VideoPlayer key={this.state.curentId}  data={this.state.video} />\n\t\t\t\t<div className='component'>\n\t\t\t\t\t<VideoSection key={this.state.curentId}  data={this.state.video} handler={this._handleOnsubmit} />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t<Route key='uniqueKey1' path='/:id' render ={(routerProps)=>\n\t\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} {...routerProps} />\n\t\t\t\t\t} />\n\t\t\t\t\t<Route key='uniqueKey2' path='/' render ={(routerProps)=>\n\t\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} {...routerProps} />\n\t\t\t\t\t} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default Brainflix;\n"]},"metadata":{},"sourceType":"module"}