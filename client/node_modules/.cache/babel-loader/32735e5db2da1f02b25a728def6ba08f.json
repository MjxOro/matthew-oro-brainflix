{"ast":null,"code":"var _jsxFileName = \"/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/pages/LandingPage/LandingPage.js\";\nimport './LandingPage.scss';\nimport React from 'react';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch } from 'react-router-dom';\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url, ApiKey, VideoArray } from '../../apiKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Brainflix extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: null,\n      videoList: null,\n      currentId: null\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (prevProps.match.params.id !== this.props.match.params.id) {\n        axios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey).then(response2 => {\n          this.setState({\n            video: response2.data\n          });\n        });\n        const initialId = this.videoList[0].id;\n        this.setState({\n          currentId: initialId\n        });\n        window.scrollTo(0, 0);\n        console.log(this.state.currentId);\n      } else {\n        axios.get();\n        this.setState({\n          currentId: this.props.match.params.id\n        });\n        window.scrollTo(0, 0);\n      }\n    };\n\n    this.componentDidMount = () => {\n      axios.get(Url + VideoArray + ApiKey).then(response => {\n        this.setState({\n          videoList: response.data\n        });\n        this.setState({\n          currentId: response.data[0].id\n        });\n        console.log(this.state.currentId);\n        axios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey).then(response2 => {\n          this.setState({\n            video: response2.data\n          });\n        });\n      });\n      {\n        /*axios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey)\n        \t.then(response =>{\n        \t\tconsole.log(response)\n        \t\tthis.setState({videoList: response})\n        \t})\n        */\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.videoList && this.state.video && this.state.currentId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: Header\n          }, 'uniqueKey', false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            data: this.state.video,\n            currentId: this.state.currentId\n          }, this.state.curentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"component\",\n            children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n              data: this.state.video,\n              currentId: this.state.currentId\n            }, this.state.curentId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/:id\",\n                render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                  data: this.state.videoList,\n                  currentId: this.state.currentId,\n                  ...routerProps\n                }, this.state.currentId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 6\n                }, this)\n              }, 'uniqueKey1', false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                  data: this.state.videoList,\n                  currentId: this.state.currentId,\n                  ...routerProps\n                }, this.state.currentId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 6\n                }, this)\n              }, 'uniqueKey2', false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true)\n      }, void 0, false);\n    };\n  }\n\n} //\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\n\n\nexport default Brainflix;","map":{"version":3,"sources":["/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/pages/LandingPage/LandingPage.js"],"names":["React","videoListData","mainVideoData","Header","VideoSection","VideoPlayer","VideoList","Route","Switch","UrlIdCheck","UrlIdConverter","axios","Url","ApiKey","VideoArray","Brainflix","Component","state","video","videoList","currentId","componentDidUpdate","prevProps","prevState","match","params","id","props","get","then","response2","setState","data","initialId","window","scrollTo","console","log","componentDidMount","response","render","curentId","routerProps"],"mappings":"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","sourcesContent":["import './LandingPage.scss';\nimport React from 'react';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch} from 'react-router-dom'\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url,ApiKey,VideoArray} from '../../apiKey';\nclass Brainflix extends React.Component{\n\n\tstate = {\n\t\tvideo: null,\n\t\tvideoList: null,\n\t\tcurrentId: null,\n\n\t}\n\tcomponentDidUpdate = (prevProps,prevState) => {\n\n\t\tif(prevProps.match.params.id !== this.props.match.params.id){\n\t\t\taxios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey)\n\t\t\t.then(response2 => {\n\t\t\t\tthis.setState({video: response2.data})\n\t\t\t})\n\t\t\t\tconst initialId = this.videoList[0].id\n\t\t\t\tthis.setState({currentId: initialId})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t\tconsole.log(this.state.currentId)\n\t\t\t}\n\t\t\t\n\t\t\telse{\n\t\t\t\taxios.get()\n\t\t\t\tthis.setState({currentId: this.props.match.params.id})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t\n\t\t\n\t}\n\n\tcomponentDidMount = () =>{\n\t\taxios.get(Url + VideoArray + ApiKey)\n\t\t.then(response =>{\n\t\t\tthis.setState({videoList: response.data})\n\t\t\tthis.setState({currentId: response.data[0].id})\n\t\t\tconsole.log(this.state.currentId)\n\t\t\taxios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey)\n\t\t\t.then(response2 => {\n\t\t\t\tthis.setState({video: response2.data})\n\t\t\t})\n\t\t})\n\t{/*axios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey)\n\t\t\t.then(response =>{\n\t\t\t\tconsole.log(response)\n\t\t\t\tthis.setState({videoList: response})\n\t\t\t})\n\t*/}\n\t}\n\n\trender = () =>{\n\t\treturn(\n\t\t\t<>\n\t\t\t{ this.state.videoList && this.state.video && this.state.currentId  && (\n\t\t\t<>\n\t\t\t<Route key='uniqueKey' path='/' component={Header}  />\n\t\t\t<VideoPlayer key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t<div className='component'>\n\t\t\t\t<VideoSection key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t\t<Switch>\n\t\t\t\t<Route key='uniqueKey1' path='/:id' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t<Route key='uniqueKey2' path='/' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t\t</>\n\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\t\t\t//\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\nexport default Brainflix;\n\n"]},"metadata":{},"sourceType":"module"}