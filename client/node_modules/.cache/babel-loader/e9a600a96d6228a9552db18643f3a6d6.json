{"ast":null,"code":"import './LandingPage.scss';\nimport React from 'react';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch } from 'react-router-dom';\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url, ApiKey, VideoArray } from '../../apiKey';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Brainflix extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: null,\n      videoList: null,\n      currentId: null\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.match.params.id !== this.props.match.params.id) {\n        if (this.props.match.url === '/') {\n          const initialId = this.videoList[0].id;\n          this.setState({\n            currentId: initialId\n          });\n          window.scrollTo(0, 0);\n        } else {\n          this.setState({\n            currentId: this.props.match.params.id\n          });\n          window.scrollTo(0, 0);\n        }\n      }\n\n      axios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey).then(response => {\n        console.log(response);\n        this.setState({\n          videoList: response\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      axios.get(Url + VideoArray + ApiKey).then(response => {\n        this.setState({\n          videoList: response.data\n        });\n        console.log(this.state.videoList);\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.videoList && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false);\n    };\n  }\n\n} //\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\n\n\nexport default Brainflix;","map":{"version":3,"sources":["/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/pages/LandingPage/LandingPage.js"],"names":["React","videoListData","mainVideoData","Header","VideoSection","VideoPlayer","VideoList","Route","Switch","UrlIdCheck","UrlIdConverter","axios","Url","ApiKey","VideoArray","Brainflix","Component","state","video","videoList","currentId","componentDidUpdate","prevProps","match","params","id","props","url","initialId","setState","window","scrollTo","get","then","response","console","log","componentDidMount","data","render"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAaC,MAAb,EAAoBC,UAApB,QAAqC,cAArC;;;;AACA,MAAMC,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACPC,MAAAA,KAAK,EAAE,IADA;AAEPC,MAAAA,SAAS,EAAE,IAFJ;AAGPC,MAAAA,SAAS,EAAE;AAHJ,KAF8B;;AAAA,SAQtCC,kBARsC,GAQhBC,SAAD,IAAe;AACnC,UAAGA,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuBC,EAAvB,KAA8B,KAAKC,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzD,EAA4D;AAC3D,YAAG,KAAKC,KAAL,CAAWH,KAAX,CAAiBI,GAAjB,KAAyB,GAA5B,EAAgC;AAC/B,gBAAMC,SAAS,GAAG,KAAKT,SAAL,CAAe,CAAf,EAAkBM,EAApC;AACA,eAAKI,QAAL,CAAc;AAACT,YAAAA,SAAS,EAAEQ;AAAZ,WAAd;AACAE,UAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACA,SAJD,MAMI;AACH,eAAKF,QAAL,CAAc;AAACT,YAAAA,SAAS,EAAE,KAAKM,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC;AAApC,WAAd;AACAK,UAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACA;AACD;;AACApB,MAAAA,KAAK,CAACqB,GAAN,CAAUpB,GAAG,GAAGE,UAAN,GAAmB,KAAKG,KAAL,CAAWG,SAA9B,GAA0C,GAA1C,GAAgDP,MAA1D,EACCoB,IADD,CACMC,QAAQ,IAAG;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKL,QAAL,CAAc;AAACV,UAAAA,SAAS,EAAEe;AAAZ,SAAd;AACA,OAJD;AAKD,KA1BqC;;AAAA,SA2BtCG,iBA3BsC,GA2BlB,MAAK;AACxB1B,MAAAA,KAAK,CAACqB,GAAN,CAAUpB,GAAG,GAAGE,UAAN,GAAmBD,MAA7B,EACCoB,IADD,CACMC,QAAQ,IAAG;AAChB,aAAKL,QAAL,CAAc;AAACV,UAAAA,SAAS,EAAEe,QAAQ,CAACI;AAArB,SAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,SAAvB;AACA,OAJD;AAKA,KAjCqC;;AAAA,SAoCtCoB,MApCsC,GAoC7B,MAAK;AACb,0BACC;AAAA,kBACE,KAAKtB,KAAL,CAAWE,SAAX,iBACF;AAFA,uBADD;AAqBA,KA1DqC;AAAA;;AAAA,C,CA4DpC;;;AACH,eAAeJ,SAAf","sourcesContent":["import './LandingPage.scss';\nimport React from 'react';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport Header from '../../components/Header/Header';\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport VideoList from '../../components/VideoList/VideoList';\nimport { Route, Switch} from 'react-router-dom'\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\nimport axios from 'axios';\nimport { Url,ApiKey,VideoArray} from '../../apiKey';\nclass Brainflix extends React.Component{\n\n\tstate = {\n\t\tvideo: null,\n\t\tvideoList: null,\n\t\tcurrentId: null,\n\n\t}\n\tcomponentDidUpdate = (prevProps) => {\n\t\tif(prevProps.match.params.id !== this.props.match.params.id){\n\t\t\tif(this.props.match.url === '/'){\n\t\t\t\tconst initialId = this.videoList[0].id\n\t\t\t\tthis.setState({currentId: initialId})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t\t\n\t\t\telse{\n\t\t\t\tthis.setState({currentId: this.props.match.params.id})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t}\n\t\t\taxios.get(Url + VideoArray + this.state.currentId + '/' + ApiKey)\n\t\t\t.then(response =>{\n\t\t\t\tconsole.log(response)\n\t\t\t\tthis.setState({videoList: response})\n\t\t\t})\n\t}\n\tcomponentDidMount = () =>{\n\t\taxios.get(Url + VideoArray + ApiKey)\n\t\t.then(response =>{\n\t\t\tthis.setState({videoList: response.data})\n\t\t\tconsole.log(this.state.videoList)\n\t\t})\n\t}\n\n\n\trender = () =>{\n\t\treturn(\n\t\t\t<>\n\t\t\t{ this.state.videoList  && (\n\t\t\t<>\n\t{/*\t\t<Route key='uniqueKey' path='/' component={Header}  />\n\t\t\t<VideoPlayer key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t<div className='component'>\n\t\t\t\t<VideoSection key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t\t<Switch>\n\t\t\t\t<Route key='uniqueKey1' path='/:id' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t<Route key='uniqueKey2' path='/' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t</Switch>\n\t\t\t</div>*/}\n\t\t\t</>\n\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\t\t\t//\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\nexport default Brainflix;\n\n"]},"metadata":{},"sourceType":"module"}