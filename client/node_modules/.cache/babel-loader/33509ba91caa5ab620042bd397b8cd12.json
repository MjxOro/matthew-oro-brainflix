{"ast":null,"code":"var _jsxFileName = \"/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/components/Brainflix/Brainflix.js\";\nimport './Brainflix.scss';\nimport React from 'react';\nimport Header from '../Header/Header';\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport VideoSection from '../VideoSection/VideoSection';\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport VideoList from '../VideoList/VideoList';\nimport { Route, Switch } from 'react-router-dom';\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Brainflix extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: mainVideoData,\n      videoList: videoListData,\n      currentId: videoListData[0].id\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.match.params.id !== this.props.match.params.id) {\n        if (this.props.match.url === '/') {\n          const initialId = videoListData[0].id;\n          this.setState({\n            currentId: initialId\n          });\n          window.scrollTo(0, 0);\n        } else {\n          this.setState({\n            currentId: this.props.match.params.id\n          });\n          window.scrollTo(0, 0);\n        }\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          data: this.state.video,\n          currentId: this.state.currentId\n        }, this.state.curentId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"component\",\n          children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n            data: this.state.video,\n            currentId: this.state.currentId\n          }, this.state.curentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:id\",\n              render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                data: this.state.videoList,\n                currentId: this.state.currentId,\n                ...routerProps\n              }, this.state.currentId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              render: routerProps => /*#__PURE__*/_jsxDEV(VideoList, {\n                data: this.state.videoList,\n                currentId: this.state.currentId,\n                ...routerProps\n              }, this.state.currentId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  componentDidMount() {\n    if (UrlIdCheck(this.props.match.url, this.props.match.params.id)) {\n      const urlId = UrlIdConverter(this.props.match.url, this.state.videoList);\n      this.setState({\n        currentId: urlId\n      });\n      window.scrollTo(0, 0);\n    } else {\n      const initialId = videoListData[0].id;\n      this.setState({\n        currentId: initialId\n      });\n      window.scrollTo(0, 0);\n    }\n  }\n\n} //\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\n\n\nexport default Brainflix;","map":{"version":3,"sources":["/Users/mattheworo/Desktop/brainstation/matthew-oro-brainflix/src/components/Brainflix/Brainflix.js"],"names":["React","Header","videoListData","mainVideoData","VideoSection","VideoPlayer","VideoList","Route","Switch","UrlIdCheck","UrlIdConverter","Brainflix","Component","state","video","videoList","currentId","id","componentDidUpdate","prevProps","match","params","props","url","initialId","setState","window","scrollTo","render","curentId","routerProps","componentDidMount","urlId"],"mappings":"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","sourcesContent":["import './Brainflix.scss';\nimport React from 'react';\nimport Header from '../Header/Header'\nimport videoListData from '../../assets/Data/videos.json';\nimport mainVideoData from '../../assets/Data/video-details.json';\nimport VideoSection from '../VideoSection/VideoSection';\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport VideoList from '../VideoList/VideoList';\nimport { Route, Switch} from 'react-router-dom'\nimport { UrlIdCheck, UrlIdConverter } from '../../javascriptHelper';\n\n\nclass Brainflix extends React.Component{\n\n\tstate = {\n\t\tvideo: mainVideoData,\n\t\tvideoList: videoListData,\n\t\tcurrentId: videoListData[0].id,\n\n\t}\n\tcomponentDidUpdate = (prevProps) => {\n\t\tif(prevProps.match.params.id !== this.props.match.params.id){\n\t\t\tif(this.props.match.url === '/'){\n\t\t\t\tconst initialId = videoListData[0].id\n\t\t\t\tthis.setState({currentId: initialId})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t\t\n\t\t\telse{\n\t\t\t\tthis.setState({currentId: this.props.match.params.id})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\t\tif(UrlIdCheck(this.props.match.url,this.props.match.params.id)){\n\t\t\t\tconst urlId = UrlIdConverter(this.props.match.url,this.state.videoList)\n\t\t\t\tthis.setState({currentId: urlId})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconst initialId = videoListData[0].id\n\t\t\t\tthis.setState({currentId: initialId})\n\t\t\t\twindow.scrollTo(0,0);\n\t\t\t}\n\n\t}\n\n\trender = () =>{\n\t\treturn(\n\t\t\t<>\n\t\t\t<Route path='/' component={Header}  />\n\t\t\t<VideoPlayer key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t<div className='component'>\n\t\t\t\t<VideoSection key={this.state.curentId}  data={this.state.video} currentId={this.state.currentId} />\n\t\t\t\t<Switch>\n\t\t\t\t<Route path='/:id' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t<Route path='/' render ={(routerProps)=>\n\t\t\t\t\t<VideoList key={this.state.currentId} data={this.state.videoList} currentId={this.state.currentId} {...routerProps} />\n\t\t\t\t} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\t\t\t//\t<VideoList key={this.state.videoList.id} vList={this.state.videoList} elemNum={this.state.indexNumber} switcher={this.videoSwitcher} />\nexport default Brainflix;\n\n"]},"metadata":{},"sourceType":"module"}